From 84c443a276cac716657ac50c481472ee417c66f3 Mon Sep 17 00:00:00 2001
From: Fabrizio Castro <fabrizio.castro.jz@renesas.com>
Date: Thu, 7 Oct 2021 12:06:33 +0100
Subject: [PATCH] Update 0001-Add-linux-oe-g-platform.patch and general
 improvements

As the version of Qt we use is slightly different from
the one provided by meta-qt5, patch 0001-Add-linux-oe-g-platform.patch
doesn't apply cleanly. Update patch 0001-Add-linux-oe-g-platform.patch.

The best way to get bitbake to replace the patch is by making
the patch available with FILESEXTRAPATHS_prepend, bitbake
will stop searching for the mentioned patch at the first hit
in the mentioned paths, therefore replace _append with _prepend.
Furthermore, the current implementation uses _append, but puts
":" at the end of the string, which is not correct as ":" is the
context of an append. Replace _append with _prepend to fix Qt related
recipes.

Furthermore, some Qt recipes append to SRC_URI, which makes it
difficult to later bbappends to deal with, replace SRC_URI_append
with SRC_URI += .

Signed-off-by: Fabrizio Castro <fabrizio.castro.jz@renesas.com>
---
 .../qt5/nativesdk-qtbase_git.bbappend         |   7 +-
 .../qt5-layer/qt5/qtbase-native_git.bbappend  |   7 +-
 .../qtbase/0001-Add-linux-oe-g-platform.patch | 364 ++++++++++++++++++
 ...al-hostbindir-option-for-native-sdk.patch} |   0
 .../qt5-layer/qt5/qtbase_git.bbappend         |   6 +-
 .../qt5-layer/qt5/qtdeclarative_git.bbappend  |   2 +-
 .../qt5-layer/qt5/qtmultimedia_git.bbappend   |   2 +-
 .../qt5-layer/qt5/qtxmlpatterns_git.bbappend  |   2 +-
 8 files changed, 374 insertions(+), 16 deletions(-)
 create mode 100644 dynamic-layers/qt5-layer/qt5/qtbase/0001-Add-linux-oe-g-platform.patch
 rename dynamic-layers/qt5-layer/qt5/qtbase/{0011-Add-external-hostbindir-option-for-native-sdk.patch => 0010-Add-external-hostbindir-option-for-native-sdk.patch} (100%)

diff --git a/dynamic-layers/qt5-layer/qt5/nativesdk-qtbase_git.bbappend b/dynamic-layers/qt5-layer/qt5/nativesdk-qtbase_git.bbappend
index 30d3475c..09f0d6d1 100644
--- a/dynamic-layers/qt5-layer/qt5/nativesdk-qtbase_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/nativesdk-qtbase_git.bbappend
@@ -2,11 +2,8 @@
 require qt5.6.3_git.inc
 SRCREV = "e6f8b072d2bf15f8b82bede48ff29ce8ac8dbd9a"
 
-FILESEXTRAPATHS_append := "${THISDIR}/qtbase:"
-
-# Replace patch to work with Qt5.6.3, old patch only work with Qt.5.6.2
-SRC_URI_remove = "file://0010-Add-external-hostbindir-option-for-native-sdk.patch"
-SRC_URI += " file://0011-Add-external-hostbindir-option-for-native-sdk.patch"
+# Use updated patches
+FILESEXTRAPATHS_prepend := "${THISDIR}/qtbase:"
 
 LIC_FILES_CHKSUM = " \
     file://LICENSE.LGPLv21;md5=fb91571854638f10b2e5f36562661a5a \
diff --git a/dynamic-layers/qt5-layer/qt5/qtbase-native_git.bbappend b/dynamic-layers/qt5-layer/qt5/qtbase-native_git.bbappend
index 3dedacd8..21da8218 100644
--- a/dynamic-layers/qt5-layer/qt5/qtbase-native_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/qtbase-native_git.bbappend
@@ -2,11 +2,8 @@
 require qt5.6.3_git.inc
 SRCREV = "e6f8b072d2bf15f8b82bede48ff29ce8ac8dbd9a"
 
-FILESEXTRAPATHS_append := "${THISDIR}/qtbase:"
-
-# Replace patch to work with Qt5.6.3, old patch only work with Qt.5.6.2
-SRC_URI_remove = "file://0010-Add-external-hostbindir-option-for-native-sdk.patch"
-SRC_URI += " file://0011-Add-external-hostbindir-option-for-native-sdk.patch"
+# Use updated patches
+FILESEXTRAPATHS_prepend := "${THISDIR}/qtbase:"
 
 LIC_FILES_CHKSUM = " \
     file://LICENSE.LGPLv21;md5=fb91571854638f10b2e5f36562661a5a \
diff --git a/dynamic-layers/qt5-layer/qt5/qtbase/0001-Add-linux-oe-g-platform.patch b/dynamic-layers/qt5-layer/qt5/qtbase/0001-Add-linux-oe-g-platform.patch
new file mode 100644
index 00000000..c6870fe3
--- /dev/null
+++ b/dynamic-layers/qt5-layer/qt5/qtbase/0001-Add-linux-oe-g-platform.patch
@@ -0,0 +1,364 @@
+From 19ab908d98e25c4693b2ac193433f63f7bdd8bf1 Mon Sep 17 00:00:00 2001
+From: Martin Jansa <Martin.Jansa@gmail.com>
+Date: Mon, 15 Apr 2013 04:29:32 +0200
+Subject: [PATCH] Add linux-oe-g++ platform
+
+* This qmake.conf unlike other platforms reads most variables from
+  shell environment, because it's easier for qt recipes to export
+  *FLAGS or CC specific for given recipe
+
+* configure: add getQEvalMakeConf and getXQEvalMakeConf
+  Allow expansion of $(...) references from qmake.conf to generate
+  qmake environment from shell environment as exported by qmake5_base
+
+* configure: don't export SYSTEM_VARIABLES to .qmake.vars
+  linux-oe-g++ should handle this correctly and exporting LD as QMAKE_LINK is
+  causing issues as we need g++ to be used as linker
+
+* configure.prf: Allow to add extra arguments to make
+  sometimes we would like to add -e or define some variable and respect it from both
+  Makefiles used in configure tests and also Makefiles to build the application
+
+* OE_QMAKE_CXX in order to allow compiler version check to succeed
+  which allows WebKit to be enabled.
+
+* Other variables in order to let config.tests to use our -platform
+  settings
+
+* Add setBootstrapEvalVariable to bootstrap qmake with our environment
+  too, this allows us to use -platform linux-oe-g++ also for native
+  recipe
+
+* disable gdb_dwarf_index
+  * qmake is trying to call native gdb and we don't depend on gdb-native
+    (or even provide gdb-native)
+  * fixes errors like this:
+    /bin/sh: gdb: command not found
+    /bin/sh: line 0: test: -gt: unary operator expected
+    which are not fatal, but still misleading in do_configure output
+
+* add -target suffix to qmake built in qtbase configure, this way we can
+  use qmake from qtbase-native, but then include qmake built for target
+  in qtbase-tools package (smilarly for nativesdk-qtbase).
+
+Upstream-Status: Inappropriate [embedded specific]
+                 too OE specific, probably cannot be upstreamed
+
+Change-Id: I0591ed5da0d61d7cf1509d420e6b293582f1863c
+Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
+
+---
+ configure                            |  71 ++++++++++++-------
+ mkspecs/features/configure.prf       |   4 +-
+ mkspecs/linux-oe-g++/qmake.conf      |  42 +++++++++++
+ mkspecs/linux-oe-g++/qplatformdefs.h | 100 +++++++++++++++++++++++++++
+ 4 files changed, 189 insertions(+), 28 deletions(-)
+ create mode 100644 mkspecs/linux-oe-g++/qmake.conf
+ create mode 100644 mkspecs/linux-oe-g++/qplatformdefs.h
+
+diff --git a/configure b/configure
+index 6ebeab30fe..9e552c60eb 100755
+--- a/configure
++++ b/configure
+@@ -343,6 +343,16 @@ getQMakeConf()
+     getSingleQMakeVariable "$1" "$specvals"
+ }
+ 
++# OE qmake.conf is reading some variables from shell env
++# read them from qmake.conf, replace qmake () syntax with shell and eval
++getQEvalMakeConf()
++{
++    VAL=`getQMakeConf "$1" | sed -n 's/$[(]\([0-9a-zA-Z_]*\)[)]/$\1/pg'`
++    EVAL=`eval "echo ${VAL}"`
++#    echo "Running getQEvalMakeConf: var='$1', val='`getQMakeConf \"$1\"`, val-sed='$VAL', eval='$EVAL'" >&2
++    eval "echo ${VAL}"
++}
++
+ getXQMakeConf()
+ {
+     if [ -z "$xspecvals" ]; then
+@@ -367,6 +377,16 @@ testXConfig()
+     esac
+ }
+ 
++# OE qmake.conf is reading some variables from shell env
++# read them from qmake.conf, replace qmake () syntax with shell and eval
++getXQEvalMakeConf()
++{
++    VAL=`getXQMakeConf "$1" | sed -n 's/$[(]\([0-9a-zA-Z_]*\)[)]/$\1/pg'`
++    EVAL=`eval "echo ${VAL}"`
++#    echo "Running getXQEvalMakeConf: var='$1', val='`getXQMakeConf \"$1\"`, val-sed='$VAL', eval='$EVAL'" >&2
++    eval "echo ${VAL}"
++}
++
+ compilerSupportsFlag()
+ {
+     cat >conftest.cpp <<EOF
+@@ -573,24 +593,14 @@ fi
+ # initalize variables
+ #-------------------------------------------------------------------------------
+ 
+-SYSTEM_VARIABLES="AR RANLIB STRIP OBJDUMP LD CC CXX CFLAGS CXXFLAGS LDFLAGS"
+-for varname in $SYSTEM_VARIABLES; do
++# Export all OE variables for qmake.conf from shell env to QMakeVars
++OE_VARIABLES="AR CC CFLAGS COMPILER CXX CXXFLAGS LDFLAGS LINK QT_CONFIG STRIP"
++for varname in $OE_VARIABLES; do
+     qmakevarname="${varname}"
+-    qmakecmdargs=""
+-    # use LDFLAGS for autoconf compat, but qmake uses QMAKE_LFLAGS
+-    if [ "${varname}" = "LDFLAGS" ]; then
+-        qmakevarname="LFLAGS"
+-    elif [ "${varname}" = "LD" ]; then
+-        qmakevarname="LINK"
+-    elif [ "${varname}" = "AR" ]; then
+-        # QMAKE_AR needs to be set to "/path/to/ar cqs" but the
+-        # environment variable will be set to the command only so we
+-        # need to append " cqs" for autoconf compatibility
+-        qmakecmdargs=" cqs"
+-    fi
+     cmd=`echo \
+-'if [ -n "\$'${varname}'" ]; then
+-    QMakeVar set QMAKE_'${qmakevarname}' "\$'${varname}${qmakecmdargs}'"
++'if [ -n "\$OE_QMAKE_'${varname}'" ]; then
++    QMakeVar set OE_QMAKE_'${qmakevarname}' "\$OE_QMAKE_'${varname}'"
++#    echo "Exporting OE_QMAKE_'${qmakevarname}' value=\"\$OE_QMAKE_'${varname}'\"" >&2
+ fi'`
+     eval "$cmd"
+ done
+@@ -3443,7 +3453,7 @@ if [ "$XPLATFORM_MAC" = "yes" ]; then
+     [ "$CFG_QGTKSTYLE" = "auto" ] && CFG_QGTKSTYLE=no
+ fi
+ 
+-QMAKE_CONF_COMPILER=`getXQMakeConf QMAKE_CXX`
++QMAKE_CONF_COMPILER=`getXQEvalMakeConf QMAKE_CXX`
+ 
+ TEST_COMPILER=$QMAKE_CONF_COMPILER
+ 
+@@ -3504,7 +3514,7 @@ if [ "$XPLATFORM_SYMBIAN_SBSV2" = "no" ]; then
+         exit 1
+     fi
+ fi
+-TEST_COMPILER_CXXFLAGS=`getXQMakeConf QMAKE_CXXFLAGS`
++TEST_COMPILER_CXXFLAGS=`getXQEvalMakeConf QMAKE_CXXFLAGS`
+ 
+ GCC_MACHINE_DUMP=
+ case "$TEST_COMPILER" in *g++) GCC_MACHINE_DUMP=$($TEST_COMPILER -dumpmachine);; esac
+@@ -4005,6 +4015,14 @@ setBootstrapVariable()
+     getQMakeConf "$1" | echo ${2-$1} = `if [ -n "$3" ]; then sed "$3"; else cat; fi` >> "$mkfile"
+ }
+ 
++# OE qmake.conf is reading some variables from shell env
++# read them from qmake.conf, replace qmake () syntax with shell and eval
++setBootstrapEvalVariable()
++{
++    getQEvalMakeConf "$1" | echo ${2-$1} = `if [ -n "$3" ]; then sed "$3"; else cat; fi` >> "$mkfile"
++}
++
++
+ # build qmake
+ if true; then ###[ '!' -f "$outpath/bin/qmake" ];
+     echo "Creating qmake..."
+@@ -4043,14 +4061,14 @@ if true; then ###[ '!' -f "$outpath/bin/qmake" ];
+         fi
+ 
+         [ "$CFG_SILENT" = "yes" ] && CC_TRANSFORM='s,^,\@,' || CC_TRANSFORM=
+-        setBootstrapVariable QMAKE_CC CC "$CC_TRANSFORM"
+-        setBootstrapVariable QMAKE_CXX CXX "$CC_TRANSFORM"
+-        setBootstrapVariable QMAKE_CFLAGS
+-        setBootstrapVariable QMAKE_CFLAGS_SPLIT_SECTIONS
+-        setBootstrapVariable QMAKE_CXXFLAGS
+-        setBootstrapVariable QMAKE_CXXFLAGS_SPLIT_SECTIONS
+-        setBootstrapVariable QMAKE_LFLAGS
+-        setBootstrapVariable QMAKE_LFLAGS_GCSECTIONS
++        setBootstrapEvalVariable QMAKE_CC CC "$CC_TRANSFORM"
++        setBootstrapEvalVariable QMAKE_CXX CXX "$CC_TRANSFORM"
++        setBootstrapEvalVariable QMAKE_CFLAGS
++        setBootstrapEvalVariable QMAKE_CFLAGS_SPLIT_SECTIONS
++        setBootstrapEvalVariable QMAKE_CXXFLAGS
++        setBootstrapEvalVariable QMAKE_CXXFLAGS_SPLIT_SECTIONS
++        setBootstrapEvalVariable QMAKE_LFLAGS
++        setBootstrapEvalVariable QMAKE_LFLAGS_GCSECTIONS
+ 
+         if [ "$CFG_DEBUG" = "no" ] || [ "$CFG_RELEASE_TOOLS" = "yes" ]; then
+             setBootstrapVariable QMAKE_CFLAGS_RELEASE
+@@ -4093,6 +4111,7 @@ if true; then ###[ '!' -f "$outpath/bin/qmake" ];
+                         \"\$(SOURCE_PATH)/src/corelib/io/qfsfileengine_unix.cpp\" \
+                         \"\$(SOURCE_PATH)/src/corelib/tools/qlocale_unix.cpp\""
+             EXEEXT=
++            [ "$QT_CROSS_COMPILE" = "yes" ] && EXEEXT=-target
+         fi
+         if [ "$BUILD_ON_MAC" = "yes" ]; then
+             echo "COCOA_LFLAGS =-framework Foundation -framework CoreServices" >>"$mkfile"
+diff --git a/mkspecs/features/configure.prf b/mkspecs/features/configure.prf
+index a3ec227eee..eef6006b25 100644
+--- a/mkspecs/features/configure.prf
++++ b/mkspecs/features/configure.prf
+@@ -71,12 +71,12 @@ defineTest(qtCompileTest) {
+     }
+ 
+     # Clean up after previous run
+-    exists($$test_out_dir/Makefile):qtRunLoggedCommand("$$test_cmd_base $$QMAKE_MAKE distclean")
++    exists($$test_out_dir/Makefile):qtRunLoggedCommand("$$test_cmd_base $$QMAKE_MAKE $$(QMAKE_MAKE_ARGS) distclean")
+ 
+     mkpath($$test_out_dir)|error("Aborting.")
+ 
+     qtRunLoggedCommand("$$test_cmd_base $$system_quote($$system_path($$QMAKE_QMAKE)) -spec $$QMAKESPEC $$qmake_configs $$shell_quote($$test_dir)") {
+-        qtRunLoggedCommand("$$test_cmd_base $$QMAKE_MAKE") {
++        qtRunLoggedCommand("$$test_cmd_base $$QMAKE_MAKE $$(QMAKE_MAKE_ARGS)") {
+             log("yes$$escape_expand(\\n)")
+             msg = "test $$1 succeeded"
+             write_file($$QMAKE_CONFIG_LOG, msg, append)
+diff --git a/mkspecs/linux-oe-g++/qmake.conf b/mkspecs/linux-oe-g++/qmake.conf
+new file mode 100644
+index 0000000000..311ba0460e
+--- /dev/null
++++ b/mkspecs/linux-oe-g++/qmake.conf
+@@ -0,0 +1,42 @@
++#
++# qmake configuration for linux-g++ with modifications for building with OpenEmbedded
++#
++
++MAKEFILE_GENERATOR	= UNIX
++CONFIG += incremental
++QMAKE_INCREMENTAL_STYLE = sublib
++
++include(../common/linux.conf)
++
++# QMAKE_<TOOL> (moc, uic, rcc) are gone, overwrite only ar and strip
++QMAKE_AR              = $(OE_QMAKE_AR) cqs
++QMAKE_STRIP           = $(OE_QMAKE_STRIP)
++QMAKE_WAYLAND_SCANNER = $(OE_QMAKE_WAYLAND_SCANNER)
++
++include(../common/gcc-base-unix.conf)
++
++# *FLAGS from gcc-base.conf
++QMAKE_CFLAGS                += $(OE_QMAKE_CFLAGS)
++QMAKE_CXXFLAGS              += $(OE_QMAKE_CXXFLAGS)
++QMAKE_LFLAGS                += $(OE_QMAKE_LDFLAGS)
++
++include(../common/g++-unix.conf)
++
++# tc settings from g++-base.conf
++QMAKE_COMPILER = $(OE_QMAKE_COMPILER) gcc
++QMAKE_CC       = $(OE_QMAKE_CC)
++QMAKE_CXX      = $(OE_QMAKE_CXX)
++
++QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += $(OE_QMAKE_CFLAGS)
++
++QMAKE_LINK         = $(OE_QMAKE_LINK)
++QMAKE_LINK_SHLIB   = $(OE_QMAKE_LINK)
++QMAKE_LINK_C       = $(OE_QMAKE_LINK)
++QMAKE_LINK_C_SHLIB = $(OE_QMAKE_LINK)
++
++# for the SDK
++isEmpty(QMAKE_QT_CONFIG):QMAKE_QT_CONFIG = $(OE_QMAKE_QT_CONFIG)
++
++include(../oe-device-extra.pri)
++
++load(qt_config)
+diff --git a/mkspecs/linux-oe-g++/qplatformdefs.h b/mkspecs/linux-oe-g++/qplatformdefs.h
+new file mode 100644
+index 0000000000..dd1200361e
+--- /dev/null
++++ b/mkspecs/linux-oe-g++/qplatformdefs.h
+@@ -0,0 +1,100 @@
++/****************************************************************************
++**
++** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
++** Contact: http://www.qt-project.org/legal
++**
++** This file is part of the qmake spec of the Qt Toolkit.
++**
++** $QT_BEGIN_LICENSE:LGPL$
++** Commercial License Usage
++** Licensees holding valid commercial Qt licenses may use this file in
++** accordance with the commercial license agreement provided with the
++** Software or, alternatively, in accordance with the terms contained in
++** a written agreement between you and Digia.  For licensing terms and
++** conditions see http://qt.digia.com/licensing.  For further information
++** use the contact form at http://qt.digia.com/contact-us.
++**
++** GNU Lesser General Public License Usage
++** Alternatively, this file may be used under the terms of the GNU Lesser
++** General Public License version 2.1 as published by the Free Software
++** Foundation and appearing in the file LICENSE.LGPL included in the
++** packaging of this file.  Please review the following information to
++** ensure the GNU Lesser General Public License version 2.1 requirements
++** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
++**
++** In addition, as a special exception, Digia gives you certain additional
++** rights.  These rights are described in the Digia Qt LGPL Exception
++** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
++**
++** GNU General Public License Usage
++** Alternatively, this file may be used under the terms of the GNU
++** General Public License version 3.0 as published by the Free Software
++** Foundation and appearing in the file LICENSE.GPL included in the
++** packaging of this file.  Please review the following information to
++** ensure the GNU General Public License version 3.0 requirements will be
++** met: http://www.gnu.org/copyleft/gpl.html.
++**
++**
++** $QT_END_LICENSE$
++**
++****************************************************************************/
++
++#ifndef QPLATFORMDEFS_H
++#define QPLATFORMDEFS_H
++
++// Get Qt defines/settings
++
++#include "qglobal.h"
++
++// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
++
++// 1) need to reset default environment if _BSD_SOURCE is defined
++// 2) need to specify POSIX thread interfaces explicitly in glibc 2.0
++// 3) it seems older glibc need this to include the X/Open stuff
++#ifndef _GNU_SOURCE
++#  define _GNU_SOURCE
++#endif
++
++#include <unistd.h>
++
++
++// We are hot - unistd.h should have turned on the specific APIs we requested
++
++#include <features.h>
++#include <pthread.h>
++#include <dirent.h>
++#include <fcntl.h>
++#include <grp.h>
++#include <pwd.h>
++#include <signal.h>
++
++#include <sys/types.h>
++#include <sys/ioctl.h>
++#include <sys/ipc.h>
++#include <sys/time.h>
++#include <sys/shm.h>
++#include <sys/socket.h>
++#include <sys/stat.h>
++#include <sys/wait.h>
++#include <netinet/in.h>
++#ifndef QT_NO_IPV6IFNAME
++#include <net/if.h>
++#endif
++
++#define QT_USE_XOPEN_LFS_EXTENSIONS
++#include "../common/posix/qplatformdefs.h"
++
++#undef QT_SOCKLEN_T
++
++#if defined(__GLIBC__) && (__GLIBC__ >= 2)
++#define QT_SOCKLEN_T            socklen_t
++#else
++#define QT_SOCKLEN_T            int
++#endif
++
++#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE >= 500)
++#define QT_SNPRINTF		::snprintf
++#define QT_VSNPRINTF		::vsnprintf
++#endif
++
++#endif // QPLATFORMDEFS_H
diff --git a/dynamic-layers/qt5-layer/qt5/qtbase/0011-Add-external-hostbindir-option-for-native-sdk.patch b/dynamic-layers/qt5-layer/qt5/qtbase/0010-Add-external-hostbindir-option-for-native-sdk.patch
similarity index 100%
rename from dynamic-layers/qt5-layer/qt5/qtbase/0011-Add-external-hostbindir-option-for-native-sdk.patch
rename to dynamic-layers/qt5-layer/qt5/qtbase/0010-Add-external-hostbindir-option-for-native-sdk.patch
diff --git a/dynamic-layers/qt5-layer/qt5/qtbase_git.bbappend b/dynamic-layers/qt5-layer/qt5/qtbase_git.bbappend
index 4637240c..4806fdf7 100644
--- a/dynamic-layers/qt5-layer/qt5/qtbase_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/qtbase_git.bbappend
@@ -9,9 +9,9 @@ LIC_FILES_CHKSUM = " \
     file://LICENSE.FDL;md5=6d9f2a9af4c8b8c3c769f6cc1b6aaf7e \
 "
 
-FILESEXTRAPATHS_prepend := "${THISDIR}/${PN}:" 
- 
-SRC_URI_append = " \
+FILESEXTRAPATHS_prepend := "${THISDIR}/${PN}:"
+
+SRC_URI += " \
     file://0001-Fix-division-by-zero-in-radial-gradiants-with-NEON.patch \
     file://0002-Make-tst_QOpenGLWindow-pass-on-platforms-where-the-d.patch \
     file://0003-Blacklist-and-skip-failing-tests-for-Boot2Qt-64-bit-.patch \
diff --git a/dynamic-layers/qt5-layer/qt5/qtdeclarative_git.bbappend b/dynamic-layers/qt5-layer/qt5/qtdeclarative_git.bbappend
index 703c3bd1..0316cff1 100644
--- a/dynamic-layers/qt5-layer/qt5/qtdeclarative_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/qtdeclarative_git.bbappend
@@ -10,7 +10,7 @@ LIC_FILES_CHKSUM = " \
     file://LICENSE.FDL;md5=6d9f2a9af4c8b8c3c769f6cc1b6aaf7e \
 "
 FILESEXTRAPATHS_prepend := "${THISDIR}/qtdeclarative:"
-SRC_URI_append = " \
+SRC_URI += " \
     file://0001-Build-developer-mode.patch \
     file://0002-qtdeclarative-switch-to-use-python3-instead-of-pytho.patch \
 "
diff --git a/dynamic-layers/qt5-layer/qt5/qtmultimedia_git.bbappend b/dynamic-layers/qt5-layer/qt5/qtmultimedia_git.bbappend
index 4e633af7..4cbf5ac0 100644
--- a/dynamic-layers/qt5-layer/qt5/qtmultimedia_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/qtmultimedia_git.bbappend
@@ -10,7 +10,7 @@ LIC_FILES_CHKSUM = " \
     file://LICENSE.FDL;md5=6d9f2a9af4c8b8c3c769f6cc1b6aaf7e \
 "
 
-SRC_URI_append = " \
+SRC_URI += " \
 	file://0001-Fix-binding-loop-for-declarative-camera.patch \
 	file://0003-qtmultimedia-replace-playbin-by-playbin3-to-play-vid.patch \
 	file://0004-qtmultimedia-qmlvideo-add-fullscreen-display-support.patch \
diff --git a/dynamic-layers/qt5-layer/qt5/qtxmlpatterns_git.bbappend b/dynamic-layers/qt5-layer/qt5/qtxmlpatterns_git.bbappend
index 6d37300e..ecabf2e3 100644
--- a/dynamic-layers/qt5-layer/qt5/qtxmlpatterns_git.bbappend
+++ b/dynamic-layers/qt5-layer/qt5/qtxmlpatterns_git.bbappend
@@ -4,7 +4,7 @@ SRCREV = "50582280b10fb1962b3bdfdd06a72ae1e0325049"
 
 FILESEXTRAPATHS_prepend := "${THISDIR}/${PN}:"
 
-SRC_URI_append = " \
+SRC_URI += " \
     file://0001-XSLTTokenizer-queueSorting-remove-redundant.patch \
 "
 
-- 
2.25.1

